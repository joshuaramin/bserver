// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id    String   @id @default(cuid())
  email      String
  avatarUrl  String
  is_deleted Boolean  @default(false) @db.Boolean
  created_at DateTime @default(now()) @db.Timestamp()
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp()
}

model Student {
  student_id String   @id @default(cuid())
  student_no String   @db.VarChar(50)
  is_deleted Boolean  @default(false) @db.Boolean
  created_at DateTime @default(now()) @db.Timestamp()
  Collge     College? @relation(fields: [college_id], references: [college_id])
  college_id String?
}

model College {
  college_id   String        @id @default(cuid())
  name         String        @db.VarChar(100)
  slug         String
  is_deleted   Boolean       @default(false) @db.Boolean
  created_at   DateTime      @default(now()) @db.Timestamp()
  updated_at   DateTime      @default(now()) @updatedAt @db.Timestamp()
  Student      Student[]
  Media        Media?
  IdentityCard IdentityCard?
}

model Media {
  media_id    String   @id @default(cuid())
  url         String
  file_format String
  is_deleted  Boolean  @default(false) @db.Boolean
  updated_at  DateTime @default(now()) @updatedAt @db.Timestamp()
  College     College? @relation(fields: [college_id], references: [college_id])
  college_id  String?  @unique
}

model IdentityCard {
  identityCard_id String   @id @default(cuid())
  is_deleted      Boolean  @default(false) @db.Boolean
  created_at      DateTime @default(now()) @db.Timestamp()
  updated_at      DateTime @default(now()) @updatedAt @db.Timestamp()
  College         College? @relation(fields: [college_id], references: [college_id])
  college_id      String?  @unique
}

model ActivityLogs {
  activity_id String   @id @default(cuid())
  name        String   @db.VarChar(50)
  type        String
  created_at  DateTime @default(now()) @db.Timestamp()
  updated_at  DateTime @default(now()) @updatedAt @db.Timestamp()
}
